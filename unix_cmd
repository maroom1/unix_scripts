echo $0
echo $$
echo $SHELL
ksh
exec ksh
exit
uname -a
whoami
who
sh
echo $0
exit
cal
ls -lrt
users
ls *.*
ls *.?xt
ls -a
vi filename (i, esc, shift+zz)
cat filename
cat -b filename (with numbers)
wc filename
wc -l filename
wc -lwcm filename ( lines,words,size,characters)
cp
mv
rm
pwd
~
ls -d */
ls -al | grep ^d
mkdir,rmdir,cd
mkdir -p (created parent directory)
chmod 777 filename
chown,chgrp
cat file|tail/head -2|grep test
more
ls ch*.doc & - background process
ps -ef
kill -9
sed -e 's/^[[:digit:]][[:digit:]][[:digit:]]/(&)/g' phone.txt
(555)5551212
(555)5551213
(555)5551214
(666)5551215
(666)5551216
(777)5551217

Here in pattern part you are matching first 3 digits and then using & you are replacing those 3 digits with surrounding parentheses.

sed -e 's/^[[:digit:]]\{3\}/(&)/g'  \
                      -e 's/)[[:digit:]]\{3\}/&-/g' phone.txt
(555)555-1212
(555)555-1213
(555)555-1214
(666)555-1215
(666)555-1216
(777)555-1217

Note âˆ’ In the above example, instead of repeating the character class keyword [[:digit:]] three times, you replaced it with \{3\}, which means to match the preceding regular expression three times. Here I used \ to give line break you should remove this before running this command.


	






















